apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "rocketchat.name" . }}-hook
  labels:
    {{- include "rocketchat.labels" . | nindent 4 }}
  annotations: 
    {{- if .Values.hook.argocd.enabled }}
    {{- include "rocketchat.hook.argocd-syncwave" . | nindent 4 }}
    {{- else }}
    "helm.sh/hook": post-install
    {{- end }}
spec:
  selector: {}
  template:
    metadata:
      name: {{ include "rocketchat.name" . }}-hook
    spec:
      serviceAccountName: {{ include "rocketchat.name" . }}-hook
      securityContext:
        {{- toYaml .Values.hook.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.hook.securityContext | nindent 12 }}
          image: "{{ .Values.hook.image.repository }}:{{ .Values.hook.image.tag }}"
          imagePullPolicy: {{ .Values.hook.image.pullPolicy }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NUM_USERS
              value: "{{ .Values.numUsers }}"
            - name: OUTGOING_WEBHOOK_URL
              value: {{ .Values.webhook.out }}
            - name: ROCKETCHAT_URL
              value: http://{{ include "rocketchat.name" . }}:{{ .Values.service.port }}
      restartPolicy: Never
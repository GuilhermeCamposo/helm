apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "order-simulator.labels" . | nindent 4 }}
    app.openshift.io/runtime: quarkus
  name: {{ include "order-simulator.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "order-simulator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "order-simulator.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "order-simulator.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image:  "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}        
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: CUSTOMER_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: {{ .Values.customerDb.secret.name }}
            - name: CUSTOMER_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: {{ .Values.customerDb.secret.name }}
            - name: CUSTOMER_POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: {{ .Values.customerDb.secret.name }}
            - name: CUSTOMER_DATASOURCE_JDBC_URL
              value: jdbc:postgresql://{{ .Values.customerDb.service }}:5432/${CUSTOMER_POSTGRESQL_DATABASE}
            - name: PRODUCT_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: {{ .Values.catalogDb.secret.name }}
            - name: PRODUCT_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: {{ .Values.catalogDb.secret.name }}
            - name: PRODUCT_POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: {{ .Values.catalogDb.secret.name }}
            - name: PRODUCT_DATASOURCE_JDBC_URL
              value: jdbc:postgresql://{{ .Values.catalogDb.service }}:5432/${PRODUCT_POSTGRESQL_DATABASE}
            - name: ORDER_SERVICE_URL
              value: http://{{ .Values.orderService.service }}:8080
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
